openapi: 3.0.0
info:
  title: LUCCA
  description: "Sur PowerBI :\n\n1. Fichier > Obtenir les données > Web > Avancé\n\
    2. Copier coller l'URL qui vous intéresse (voir ci-dessous les disponibilités)\n\
    3. Rajouter dans les **Headers** une clé **Authorization** avec pour valeur :\n\
    \    \n    1. **lucca application=SECRET**\n        \n\n<img src=\"https://content.pstmn.io/797097ae-ae37-4f91-b15a-0fa9889b7e3a/aW1hZ2UucG5n\"\
    \ width=\"806\" height=\"493\">"
  version: 1.0.0
servers:
- url: https://quietalis.ilucca.net
tags:
- name: Les liens API Lucca
  description: La catégorie **QueryParams** de cette documentation permet de voir
    les paramètres de l'URL à éditer pour affiner les résultats
paths:
  /api/v3/users:
    get:
      tags:
      - Les liens API Lucca
      summary: Liste des collaborateurs
      description: |-
        Sur PowerBI :

        Rajouter dans les **Headers** une valeur **Authorization** avec pour valeur :

        **lucca application=SECRET**
      operationId: apiV3UsersGET
      parameters:
      - name: Authorization
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: "{{Lucca API Key}}"
      - name: fields
        in: query
        description: Ce paramètre contient tous les champs disponibles de Lucca
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "id,name,url,displayName,modifiedOn,lastName,firstName,login,mail,dtContractStart,dtContractEnd,birthDate,employeeNumber,calendar,culture,picture,applicationData,legalEntity,department,manager,rolePrincipal,habilitedRoles,userWorkCycles"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: LesLiensAPILucca
  /api/v3/expenseClaims:
    get:
      tags:
      - Les liens API Lucca
      summary: Liste des notes de frais
      operationId: apiV3ExpenseClaimsGET
      parameters:
      - name: Authorization
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: "{{Lucca API Key}}"
      - name: paging
        in: query
        description: "Debut,fin (par defaut 0,1000)"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "0,1000000000"
      - name: declaredOn
        in: query
        description: "since,date / until,date / between,date1,date2"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "since,2000-01-01"
      - name: statusId
        in: query
        description: "1: Created; 2: PartiallyApproved; 3: Approved; 4: Controlled;\
          \ 5: ApprovedAndControlled; 6: PaymentInitiated; 7: Paid; 8: Refused; 9:\
          \ Cancelled"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "1,2,3,4,5,6,7,8,9"
      - name: fields
        in: query
        description: Ce paramètre contient tous les champs disponibles de Lucca
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "id,name,declaredOn,createdOn,modifiedOn,paymentReceivedOn,paymentMethod,status,approvalState,authorizedActions,owner,author,legalEntity,department,currency"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: LesLiensAPILucca
  /api/v3/expenseTempItems:
    get:
      tags:
      - Les liens API Lucca
      summary: Liste des dépenses déclarées
      operationId: apiV3ExpenseTempItemsGET
      parameters:
      - name: Authorization
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: "{{Lucca API Key}}"
      - name: paging
        in: query
        description: "Debut,fin (par defaut 0,1000)"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "0,1000000000"
      - name: purchasedOn
        in: query
        description: "since,date / until,date / between,date1,date2"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "since,2000-01-01"
      - name: fields
        in: query
        description: Ce paramètre contient tous les champs disponibles de Lucca
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "id,purchasedOn,originalTransaction,processedAmounts,expenseNatureId,mileage,quantity,effectiveQuantity,attendees,axisSections,customFields,merchant,comment,expenseReceipts,authorizedActions,sourceId,source,ownerId,paymentMethodId,statusId,status"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      x-swagger-router-controller: LesLiensAPILucca
components: {}
